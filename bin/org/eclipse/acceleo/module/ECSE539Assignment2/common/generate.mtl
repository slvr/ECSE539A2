[comment encoding = UTF-8 /]
[module generate('http:///fm.ecore', 'http:///grl.ecore', 'http:///urn.ecore')]

[comment  ~~Templates~~ /]

[template public urnToBeans(element : URNspec)]
	[comment @main /]
	[file (element.name.concat('.txt'), false)]
		[for (urn : URNspec | element)]
[generate(urn)/]
		[/for]
	[/file]
[/template]
[template public generate(u : URNspec)]
[if (getNumActors(u) <> 0)]
[u.generateWithActors()/]
[else]
[u.generateWithoutActors()/]
[/if]
[/template]
[template private generateWithActors (u : URNspec)]
[for (a : Actor | u.grlspec.actors)]
Actor [getActorName(a)/] {
	[for (ie : IntentionalElement | a.getElementsOfActor())]
	[ie.getNodeInformation()/]
	[/for]
}
[/for]
[/template]
[template private generateWithoutActors (u : URNspec)]
features [getRootName(u)/] [getDecompositionType(getRoot(u))/]{
		[for (e : ElementLink | getDestLinks(getRoot(u)))]
	[e.getFurtherElement()/]
		[/for]
}
[/template]
[template private getFurtherElement (e : ElementLink)]
	[if(getNumDestLinks(getLinkChild(e)) = 0)]
		[if(e.oclIsKindOf(MandatoryFMLink))]
mandatory [getIEName(getLinkChild(e))/][elseif (e.oclIsKindOf(OptionalFMLink))]
optional [getIEName(getLinkChild(e))/][else]
[getIEName(getLinkChild(e))/][/if][else]
		[if(e.oclIsKindOf(MandatoryFMLink))]
mandatory [getIEName(getLinkChild(e))/] [getDecompositionType(getLinkChild(e))/]{
		[elseif (e.oclIsKindOf(OptionalFMLink))]
optional [getIEName(getLinkChild(e))/] [getDecompositionType(getLinkChild(e))/]{
		[else]
[getIEName(getLinkChild(e))/] [getDecompositionType(getLinkChild(e))/]{
		[/if]
			[for (e : ElementLink | getDestLinks(getLinkChild(e)))]
	[getFurtherElement (e)/]
			[/for]
}	[/if]
[/template]
[template private getNodeInformation (ie : IntentionalElement)]
[if (ie.oclIsKindOf(Feature))]
feature [getIEName(ie)/] {
[else]
[getNodeType(ie)/] [getIEName(ie)/] {
[/if]
	[if(hasImportance(ie))]
	importance [getImportance(ie)/]
	[/if]
	[for(b : Belief | getBeliefs(ie))]
	[getBeliefName(b)/]
	[/for]
	[for(ie2 : IntentionalElement | getDependencies(ie))]
	dependsOn [getIEActorName(ie2)/].[getIEName(ie2)/]
	[/for]
	[for(ie2 : IntentionalElement | getDecompositions(ie))]
	[getDecompositionType(ie2).toLowerCase()/] decomposes [ie2.name/]
	[/for]
	[comment contributesTo/]
	[for(c : Contribution | getContributions(ie))]
	contributesTo [c.dest.name/] [isCorrelated(c)/]with [c.quantitativeContribution/]
	[/for]
}
[/template]
[comment ~~Queries~~ /]

[query public getNumActors(u : URNspec) : Integer
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getNumActors(urn.URNspec)', Sequence{u})
/]

[query public getActorName(a : Actor) : String
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getActorName(grl.Actor)', Sequence{a})
/]

[query public getRootName(u : URNspec) : String
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getRootName(urn.URNspec)', Sequence{u})
/]

[query public getIEName(ie : IntentionalElement) : String
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getIEName(grl.IntentionalElement)', Sequence{ie})
/]

[query public getDecompositionType(ie : IntentionalElement) : String
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getDecompositionType(grl.IntentionalElement)', Sequence{ie})
/]

[query public getNumDestLinks(ie : IntentionalElement) : Integer
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getNumDestLinks(grl.IntentionalElement)', Sequence{ie})
/]
[query public getOutgoingLinks(ie : IntentionalElement) : Sequence(Integer)
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getOutgoingLinks(grl.IntentionalElement)', Sequence{ie})
/]

[query public getDestLinks(ie : IntentionalElement) : Sequence(ElementLink)
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getDestLinks(grl.IntentionalElement)', Sequence{ie})
/]

[query public getRoot(u : URNspec) : IntentionalElement
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getRoot(urn.URNspec)', Sequence{u})
/]

[query public getNodeType(ie : IntentionalElement) : String
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getNodeType(grl.IntentionalElement)', Sequence{ie})
/]

[query public getElementsOfActor(a : Actor) : Sequence(IntentionalElement)
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getElementsOfActor(grl.Actor)', Sequence{a})
/]

[query public getLinkChild(el : ElementLink) : IntentionalElement
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getLinkChild(grl.ElementLink)', Sequence{el})
/]

[query public getDependencyName(el : ElementLink) : String
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getDependencyName(grl.ElementLink)', Sequence{el})
/]

[query public getComplimentaryDecompositionLinks(el : ElementLink) : String
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getComplimentaryDecompositionLinks(grl.ElementLink)', Sequence{el})
/]

[query public getImportance(ie : IntentionalElement) : String
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getImportance(grl.IntentionalElement)', Sequence{ie})
/]

[query public hasImportance(ie : IntentionalElement) : Boolean
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'hasImportance(grl.IntentionalElement)', Sequence{ie})
/]

[query public getBeliefs(ie : IntentionalElement) : Sequence(Belief)
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getBeliefs(grl.IntentionalElement)', Sequence{ie})
/]

[query public getBeliefName(b : Belief) : String
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getBeliefName(grl.Belief)', Sequence{b})
/]

[query public getDependencies(ie : IntentionalElement) : Sequence(IntentionalElement)
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getDependencies(grl.IntentionalElement)', Sequence{ie})
/]

[query public getIEActorName(ie : IntentionalElement) : String
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getIEActorName(grl.IntentionalElement)', Sequence{ie})
/]

[query public getDecompositions(ie : IntentionalElement) : Sequence(IntentionalElement)
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getDecompositions(grl.IntentionalElement)', Sequence{ie})
/]

[query public getContributions(ie : IntentionalElement) : Sequence(Contribution)
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'getContributions(grl.IntentionalElement)', Sequence{ie})
/]

[query public isCorrelated(c : Contribution) : String
	=invoke('org.eclipse.acceleo.module.ECSE539Assignment2.common.generateQueries', 
		'isCorrelated(grl.Contribution)', Sequence{c})
/]
